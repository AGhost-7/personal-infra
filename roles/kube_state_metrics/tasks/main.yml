# reference:
# https://github.com/kubernetes/kube-state-metrics/tree/master/examples/standard

- name: create service account
  k8s:
    definition:
      kind: ServiceAccount
      apiVersion: v1
      metadata:
        name: kube-state-metrics
        namespace: kube-system

- name: create cluster-wide role
  k8s:
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: kube-state-metrics
      rules:
      - apiGroups:
        - ""
        resources:
        - configmaps
        - secrets
        - nodes
        - pods
        - services
        - resourcequotas
        - replicationcontrollers
        - limitranges
        - persistentvolumeclaims
        - persistentvolumes
        - namespaces
        - endpoints
        verbs:
        - list
        - watch
      - apiGroups:
        - extensions
        resources:
        - daemonsets
        - deployments
        - replicasets
        - ingresses
        verbs:
        - list
        - watch
      - apiGroups:
        - apps
        resources:
        - statefulsets
        - daemonsets
        - deployments
        - replicasets
        verbs:
        - list
        - watch
      - apiGroups:
        - batch
        resources:
        - cronjobs
        - jobs
        verbs:
        - list
        - watch
      - apiGroups:
        - autoscaling
        resources:
        - horizontalpodautoscalers
        verbs:
        - list
        - watch
      - apiGroups:
        - authentication.k8s.io
        resources:
        - tokenreviews
        verbs:
        - create
      - apiGroups:
        - authorization.k8s.io
        resources:
        - subjectaccessreviews
        verbs:
        - create
      - apiGroups:
        - policy
        resources:
        - poddisruptionbudgets
        verbs:
        - list
        - watch
      - apiGroups:
        - certificates.k8s.io
        resources:
        - certificatesigningrequests
        verbs:
        - list
        - watch
      - apiGroups:
        - storage.k8s.io
        resources:
        - storageclasses
        - volumeattachments
        verbs:
        - list
        - watch
      - apiGroups:
        - admissionregistration.k8s.io
        resources:
        - mutatingwebhookconfigurations
        - validatingwebhookconfigurations
        verbs:
        - list
        - watch
      - apiGroups:
        - networking.k8s.io
        resources:
        - networkpolicies
        verbs:
        - list
        - watch
      - apiGroups:
        - coordination.k8s.io
        resources:
        - leases
        verbs:
        - list
        - watch

- name: bind cluster role to service account
  k8s:
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: kube-state-metrics
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: kube-state-metrics
      subjects:
      - kind: ServiceAccount
        name: kube-state-metrics
        namespace: kube-system

- name: deploy metrics server
  k8s:
    definition:
      kind: Deployment
      apiVersion: apps/v1
      metadata:
        name: kube-state-metrics
        namespace: kube-system
      spec:
        replicas: 1
        selector:
          matchLabels:
            type: metric
            metric: kube-state-metrics
        template:
          metadata:
            labels:
              type: metric
              metric: kube-state-metrics
          spec:
            containers:
            - name: kube-state-metrics
              image: quay.io/coreos/kube-state-metrics:v1.9.7
              livenessProbe:
                httpGet:
                  path: /healthz
                  port: 8080
                initialDelaySeconds: 5
                timeoutSeconds: 5
              ports:
              - name: http
                containerPort: 8080
              - name: telemetry
                containerPort: 8081
              resources:
                requests:
                  cpu: "100m"
                  memory: "100Mi"
                limits:
                  cpu: "200m"
                  memory: "150Mi"
            serviceAccountName: kube-state-metrics

- name: create network policy
  k8s:
    definition:
      kind: NetworkPolicy
      apiVersion: networking.k8s.io/v1
      metadata:
        name: kube-state-metrics
        namespace: kube-system
      spec:
        podSelector:
          matchLabels:
            type: metric
            metric: kube-state-metrics
        policyTypes:
        - Ingress
        ingress:
        - from:
          - namespaceSelector:
              matchLabels:
                component: metric-scraper

- name: create service
  k8s:
    definition:
      kind: Service
      apiVersion: v1
      metadata:
        name: kube-state-metrics
        namespace: kube-system
      spec:
        selector:
          type: metric
          metric: kube-state-metrics
        ports:
        - port: 8080
          targetPort: 8080
