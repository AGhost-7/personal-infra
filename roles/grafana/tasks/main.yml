
- name: create namespace
  community.kubernetes.k8s:
    definition:
      kind: Namespace
      apiVersion: v1
      metadata:
        name: grafana

- name: create pvc
  community.kubernetes.k8s:
    definition:
      kind: PersistentVolumeClaim
      metadata:
        name: grafana-data
        namespace: grafana
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
        storageClassName: "{{ grafana_storage_class }}"

- name: create deployment
  community.kubernetes.k8s:
    apply: True
    definition:
      kind: Deployment
      apiVersion: apps/v1
      metadata:
        name: grafana
        namespace: grafana
      spec:
        replicas: 1
        strategy:
          type: Recreate
        selector:
          matchLabels:
            type: metric
            metric: grafana
        template:
          metadata:
            labels:
              type: metric
              metric: grafana
          spec:
            containers:
            - name: grafana
              image: grafana/grafana:7.5.5-ubuntu
              resources:
                requests:
                  cpu: "100m"
                  memory: "100Mi"
                limits:
                  cpu: "200m"
                  memory: "200Mi"
              volumeMounts:
              - mountPath: /var/lib/grafana
                name: grafana-vol
            volumes:
            - name: grafana-vol
              persistentVolumeClaim:
                claimName: grafana-data

- name: create service
  community.kubernetes.k8s:
    apply: True
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: grafana
        namespace: grafana
      spec:
        selector:
          type: metric
          metric: grafana
        ports:
        - port: 3000
          targetPort: 3000
          protocol: TCP
          name: http

- name: expose grafana
  community.kubernetes.k8s:
    apply: True
    definition:
      apiVersion: networking.k8s.io/v1beta1
      kind: Ingress
      metadata:
        name: grafana-ingress
        namespace: grafana
        annotations:
          kubernetes.io/ingress.class: "nginx"
          cert-manager.io/cluster-issuer: jonathan-boudreau
      spec:
        tls:
        - hosts:
          - grafana.jonathan-boudreau.com
          secretName: ingress-tls-cert
        rules:
        - host: grafana.jonathan-boudreau.com
          http:
            paths:
            - path: /
              backend:
                serviceName: grafana
                servicePort: 3000
