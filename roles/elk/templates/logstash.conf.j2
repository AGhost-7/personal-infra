
# references:
# https://www.elastic.co/guide/en/elasticsearch/reference/6.4/grok-processor.html
# https://www.elastic.co/guide/en/logstash/current/plugins-inputs-syslog.html
# https://github.com/elastic/elasticsearch/blob/master/libs/grok/src/main/resources/patterns/grok-patterns
# for developing grok patterns, use:
# https://grokdebug.herokuapp.com/

input {
	syslog {
		host => "{{logstash_host}}"
		port => 5000
		id => "docker"
		grok_pattern => "<%{POSINT:priority}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{WORD:docker_container}\[%{POSINT:pid}\]: %{GREEDYDATA:syslog_message}"
	}
	syslog {
		host => "{{logstash_host}}"
		port => 5002
		id => "journald"
		grok_pattern => "<%{POSINT:priority}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{WORD:journald_hostname} %{WORD:journald_unit}(\[%{POSINT:pid}\]|): %{GREEDYDATA:syslog_message}"
	}
}

filter {
	if [docker_container] == "load_balancer" {
		grok {
			match => {
				"syslog_message" => '%{IP:nginx_ip} - - \[%{HTTPDATE:nginx_timestamp}\] "%{WORD:nginx_method} %{URIPATH:nginx_path} HTTP/%{BASE10NUM:nginx_http_version}" %{POSINT:nginx_status_code} %{POSINT:nginx_body_bytes} "(%{URI:nginx_referrer}|-)"'
			}
		}
	}
}

output {
	elasticsearch {
		hosts => ["http://localhost:9200"]
	}
	stdout {
		codec => rubydebug
	}
}
