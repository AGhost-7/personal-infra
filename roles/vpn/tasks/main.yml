
# References:
# - https://www.digitalocean.com/community/tutorials/how-to-set-up-an-openvpn-server-on-ubuntu-16-04

- name: open up port
  ufw:
    port: "{{vpn_port}}"
    proto: udp
    rule: allow
  notify:
    - reload firewall

- name: install required packages
  with_items:
    - openvpn
    - easy-rsa
  apt:
    name: "{{item}}"

- name: allow ip_forward
  sysctl:
    name: net.ipv4.ip_forward
    value: 1

- name: check if ca certs already exist
  register: ca_cert_dir
  stat:
    path: "{{ansible_env.HOME}}/ca"

- name: initialize openvpn server (this can take a while)
  when: not ca_cert_dir.stat.exists
  shell: |
    set -e
    make-cadir ~/ca
    cd ~/ca
    mkdir keys
    . vars
    ./clean-all
    ./build-ca --batch
    ./build-key-server --batch server
    ./build-dh
    openvpn --genkey --secret keys/ta.key

- name: ensure that the keys are in the openvpn server directory
  copy:
    remote_src: True
    src: "{{ansible_env.HOME}}/ca/keys/{{item}}"
    dest: "/etc/openvpn/{{item}}"
  with_items:
    - ca.crt
    - server.crt
    - server.key
    - ta.key
    - dh2048.pem

- name: determine forwarding address
  set_fact:
    vpn_forwarding_device: "{{hostvars[ansible_host][ufw_default_interface].device}}"

- name: ensure that the firewall allows masquerading
  blockinfile:
    path: /etc/ufw/before.rules
    marker: '# {mark} OPENVPN RULES'
    insertbefore: BOF
    content: |
      # NAT table rules
      *nat
      :POSTROUTING ACCEPT [0:0]
      # Allow traffic from OpenVPN client to {{vpn_forwarding_device}}
      -A POSTROUTING -s 10.8.0.0/8 -o {{vpn_forwarding_device}} -j MASQUERADE
      COMMIT
  notify:
    - reload firewall

- name: enable openvpn service
  systemd:
    name: openvpn@server
    enabled: True
    state: started

- name: ensure client keys are generated
  with_items: "{{vpn_clients}}"
  include_role:
    name: vpn_client
  vars:
    vpn_client_name: "{{item}}"
